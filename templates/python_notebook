===================================================================================
如何使用过滤
===================================================================================
>>>from random import randint
>>>data = [randint(-10,10) for _ in xrange(10)]
>>>[x for x in data if x>0]
===================================================================================
#字典解析
===================================================================================
d = {x ranint(60,100) for x in x range(21)}
{k:v for k,v in d.iteritems() if v>90 }
===================================================================================
#集合解析
===================================================================================
s = set(data)
{x for x in s if x%3==0 }
===================================================================================
#如何为元组中每个元素命名，提高程序可读性
===================================================================================
实际案例:
学生嘻嘻系统数据为固定格式
(名字,年龄,性别,邮箱)
学生数量很大，为了节省存储，每个学生都定义为一个元素
('Jim',16,'male','jim@163.com')
('Lilei',16,'male','Lilei@163.com')
('Lucy',16,'female','lucy@163.com')
访问时我们使用索引访问，大量索引降低程序可读性，如何解决这个问题?

>>NAM，AGE,GENDER,EMAIL = xrang(4)
>>student = ('Jim',16,'male','jim@163.com')
#名字
#>>print student[0]
>>print student[NAM]
#年龄
>>print student[AGE]
===================================================================================
#如何统计序列中元素的出现频度
===================================================================================
实际案例：
某随机序列[12,20,5,75，5，5.....]中，找出出现次数最高的3个元素，他们出现次数是多少
2.某英文文章单词，进行词频统计，找出出现次数最高的10个单词，他们出现次数是多少

>>from random import randint
>>data = [randint(0,20),for _ in xrange(30)]
>>c = dict.fromkeys(data,0)
>>for x in data:
    c[x] +=1

方法2.
from collections import Counter
c2 = Counter(data)
Counter.most_common(3) #统计出现次数最高的3个元素
===================================================================================

